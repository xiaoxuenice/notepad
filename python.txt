######################################   IP地址获取              #############################
import socket
s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
s.connect(('8.8.8.8',80))
s.getsockname()[0]

## tcp 状态获取
import socket
sk=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
sk.settimeout(3)
print(sk.connect_ex(('192.168.73.128',888)))
sk.close()

#####################################  logging && traceback       #############################

import logging
LOG_FORMAT = '%(asctime)s [%(module)s] %(levelname)s [%(lineno)d] %(message)s'
logging.basicConfig(level=logging.DEBUG, format=LOG_FORMAT)

except Exception as err:
   traceback.print_exc(file=open('django.log', 'a'))
   logging.error(err)
#############-----------------         虚拟环境           ---------##############################
1.创建虚拟环境
pip3 install virtualenvwrapper

2. /root/.bachrc 加载 virtualenvwrapper命令（python安装目录不同 find 查找各路径)
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
source /usr/local/bin/virtualenvwrapper.sh 

3.启动django-opsweb虚拟环境
mkvirtualenv  django-opsweb

4.supervisord 配置
environment=PYTHONPATH='/root/.virtualenvs/django-opsweb/bin'

#############-----------------         随机验证码           ---------##############################
import random
def get_code(xx):
   a='1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
   b=''
   for i in range(xx):
        c=random.randint(0,61)
        b+=a[c]
   return b   
#############-----------------         输出对齐           ---------##############################
def duiqi(name,par):
   return '{name:<{len}}\t'.format(name=name,len=30-len(name.encode('GBK'))+len(name))+par
#####################  ###-----------------        python打包为tar包        ---------###########
 tar=tarfile.open("a.tar.gz","w:gz")
    for i in file:
        tar.add(i)
    tar.close()  
#####################  ###-----------------        获取系统命令返回值         ---------###########
import subprocess
(a,b)=subprocess.getstatusoutput("curl -Ss ifconfig.me")

##########################---------------         遍历目录查找文件    ---------#############

def search(dir,fil):
    os.chdir(dir)
    it = os.listdir()
    for i in it:
        pa = os.path.join(dir,i)
        if os.path.isdir(pa):
            search(pa,fil)
            os.chdir(os.pardir)
        elif fil in pa.split("/")[-1] :
            print(pa)



#######################----------------         os,shutil 用法   ---------################
shutil.move(r'a.txt',r'b.txt')    				移动文件
shutil.retree(r'/test/')					递归删除
os.readlink('c.txt')						软链接的真实路径

#将 /Users/wupeiqi/Downloads/test 下的文件打包放置 /Users/wupeiqi/目录
shutil.make_archive("/Users/wupeiqi/wwwwwwwwww",'gztar','/Users/wupeiqi/Downloads/test)

# /data/backup/下文件创建时间排序   
dirpaht='/data/bakcup/'
sorted(os.listdir(dirpath),key=lambda x: os.path.getctime(os.path.join(dirpath,x)))

# 文件/夹大小
os.popen('du -sh  /data/django-opsweb/acme_dnsapi/ ').read().strip().split('\t')



##########################-----------------         ssh 密钥认证           ---------################
#公钥打包exe程序需要添加 --key id_rsa参数  pyinstaller -F -w --key id_rsa .py      
import paramiko
client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
private_key=paramiko.RSAKey.from_private_key_file("id_rsa")
client.connect(hostname='192.168.116.200', port=22, username='root', pkey=private_key)
print(client.get_transport().is_active())
stdin, stdout, stderr = client.exec_command('ls')
a,b=stdout.read(),stderr.read() 		 #获取执行结果   
result= a if a else b       
print(result.decode())

#########################-----------------       scp上传下载            ---------################
import paramiko,easygui
s=paramiko.Transport(("192.168.1.10",22))
s.connect(username='root',password='xiaoxue')
sftp=paramiko.SFTPClient.from_transport(s)
sftp.get('/xiaoxue/a.txt','/xiaoxue/a.txt'.split('/')[-1])              #下载
selectFile=easygui.fileopenbox()
sftp.put(selectFile,"/xiaoxue/{}".format(selectFile.split("\\")[-1]))   #上传

#############---------------        多主机不输入密码上传公钥             ---------################

import paramiko
client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
client.connect(hostname='192.168.116.200', port=22, username='root', password="xiaoxue")
with open("id_rsa.pub",'r') as f:
    GY=f.read()
client.exec_command('if [ ! -d /root/.ssh ];then mkdir /root/.ssh;fi')
client.exec_command('echo {} > /root/.ssh/authorized_keys'.format(GY))
#############---------------         time获取时间              ---------################
time.strftime("%Y_%m_%d_%H:%M:%S",time.localtime(time.time()))


######################-----------------        json编码解码              ---------##############################

import json
js={"name":"张三","age"=26}            
json.dumps(js)          #json编码
json.loads(js)          #json解码

with open("a.js",'w') as f :             #保存为文件   
      json.dump(js,f,indent=4,ensure_ascii=False)                    #json编码
         
with open('a.js','r') as f:              #读取文件
     js=json.load(f)                     #json解码


#####################-----------------        弹出提示对话框,判断有文件    ---------###########################
--  1   （推荐）----------------------------------------------------------------------------------------------
import easygui
easygui.msgbox("what are you doing now\n\n",'提示')
--  2   ------------------------------------------------------------------------------------------------------
import win32api,os,sys      
import win32con            
if os.path.isfile("src\\id_rsa.txt"):
    pass
else:
    win32api.MessageBox(win32con.NULL, "没有文件", "提示",win32con.MB_OK | win32con.MB_ICONINFORMATION)
    sys.exit(0)
--  3   -------------------------------------------------------------------------------------------------------
from tkinter import  messagebox
easygui.msgbox("lalala~",'提示')
easygui.ccbox("lalala~",'提示')   #True,False

--  4   -------------------------------------------------------------------------------------------------------
import tkinter
import tkinter.messagebox #弹窗库
1、提示消息框
tkinter.messagebox.showinfo('提示','人生苦短')
2、消息警告框
tkinter.messagebox.showwarning('警告','明日有大雨')
3、错误消息框
tkinter.messagebox.showerror('错误','出错了')
4、对话框
tkinter.messagebox.askokcancel('提示', '要执行此操作吗')#确定/取消，返回值true/false
tkinter.messagebox.askquestion('提示', '要执行此操作吗')#是/否，返回值yes/no
tkinter.messagebox.askyesno('提示', '要执行此操作吗')#是/否，返回值true/false
tkinter.messagebox.askretrycancel('提示', '要执行此操作吗')#重试/取消，返回值true/false
5、文件对话框
import tkinter.filedialog
a=tkinter.filedialog.asksaveasfilename()#返回文件名
print(a)
a =tkinter.filedialog.asksaveasfile()#会创建文件
print(a)
a =tkinter.filedialog.askopenfilename()#返回文件名
print(a)
a =tkinter.filedialog.askopenfile()#返回文件流对象
print(a)
a =tkinter.filedialog.askdirectory()#返回目录名
print(a)
a =tkinter.filedialog.askopenfilenames()#可以返回多个文件名
print(a)
a =tkinter.filedialog.askopenfiles()#多个文件流对象
print(a)
#################################-----------------        mysql数据库操作连接          ---------###########
create table IF NOT EXISTS ab(id int(50) primary key,name varchar(20),message varchar(100)) DEFAULT CHARSET=utf8;
mysql_ssl_rsa_setup --uid=mysql
vim /etc/my.cnf
ssl-ca=/var/lib/mysql/ca.pem
ssl-cert=/var/lib/mysql/server-cert.pem
ssl-key=/var/lib/mysql/server-key.pem
require_secure_transport = ON
bind-address = 0.0.0.0
systemctl  restart mysqld
ALTER USER 'root'@'%' require ssl;                                        #修改用户只允许ssl连接 
grant all privileges on *.* to 'root'@"%" identified by 'Pwd@123456' require ssl;    #授权时候只允许ssl
FLUSH PRIVILEGES;
show variables like '%ssl%';   #查看是否开启ssl连接
\s                              #看是否是ssl连接
alter user 'root'@'%' require x509;         #证书(pymysql不能用)
mysql -uroot -pPwd@123456 -h 192.168.116.200 --ssl-cert=/var/lib/mysql/client-cert.pem --ssl-key=/var/lib/mysql/client-key.pem --ssl-ca=/var/lib/mysql/ca.pem
###############-----------------                ssl+pymysql                 -------------------------
db = pymysql.connect(host="192.168.116.200",user="root",passwd="Pwd@123456",database="python",ssl={"ssl":''})
a= db.cursor()
a.execute('insert into  user(ip,time) values("123","80:02")') #创建写入数据
db.commit()
a.execute('select time  from {} where ip="{}";'.format(abrr,who))           #查询读取数据
print(a.fetchall())

#################################-----------------        检索文件远程发送         ---------###########
import os,paramiko,time,tarfile,easygui,threading,socket
from scp import SCPClient
def SCP(file):
    ssh=paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(hostname="192.168.116.200", port=22, username='zhangsan', password="zs")
    scp=SCPClient(ssh.get_transport(),socket_timeout=15.0)
    os.chdir("C:\\Users\\Administrator\\")
    tar=tarfile.open(tarn,"w:gz")
    for i in file:
        tar.add(i)
    tar.close()
    scp.put(tarn,"~")
    os.remove(tarn)
    scp.close()
wenjian = []
def search(dir):
    global wenjian
    jiewei=['doc','docx','xls','xlsx','txt','pdf']
    os.chdir(dir)
    it = os.listdir()
    for i in it:
        pa = os.path.join(dir,i)
        if os.path.isdir(pa):
            search(pa)
            os.chdir(os.pardir)
        else:
            for i in jiewei:
                if i in pa.split("\\")[-1]:
                  wenjian.append(pa)
if __name__=="__main__":
  try:
    a=time.time()
    tarn = socket.gethostbyname(socket.gethostname()) + ".tar.gz"
    search("C:\\Users\\Administrator\\Desktop")
    threading.Thread(target=SCP,args=(wenjian,)).start()
    print("okay..........................",time.time()-a)
  except  Exception as f :
      easygui.msgbox(str(f),'linux')
#######   动态输出
import  paramiko
ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh_client.connect(hostname='192.168.1.12', port=22, username='root', password='123456')
stdin, stdout, stderr = ssh_client.exec_command("sh /root/test.sh")
while not stdout.channel.exit_status_ready():
    result = stdout.readline()
    print(result.strip())
    if stdout.channel.exit_status_ready():
        break
ssh_client.close()

#######   动态输出2
import subprocess
p = subprocess.Popen('sh /test/test.sh', stdout=subprocess.PIPE, stderr=subprocess.STDOUT, bufsize=0,universal_newlines=True, shell=True)
while p.poll() is None:
   line = p.stdout.readline()
   print(line)
